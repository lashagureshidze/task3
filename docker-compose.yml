version: "3.9"

networks:
  sender:
  recipient:

services:
  eureka-server:
    container_name: eureka-server
    build: ./eureka-server
    image: eureka-server:latest
    ports:
      - 8761:8761
    networks:
      - sender
      - recipient

  rabbitmq:
    container_name: rabbitmq
    image: bitnami/rabbitmq:3.9.8
    environment:
      RABBITMQ_USERNAME: user
      RABBITMQ_PASSWORD: pass
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - sender
      - recipient

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prom.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    networks:
      - sender
      - recipient
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    environment:
      GF_SECURITY_ADMIN_USER: user
      GF_SECURITY_ADMIN_PASSWORD: pass
    networks:
      - sender
      - recipient

  micro-sender:
    container_name: micro-sender
    build: ./micro-sender
    image: micro-sender:latest
    ports:
      - 8081:8081
    networks:
      - sender
    depends_on:
      eureka-server:
        condition: service_started
      rabbitmq:
        condition: service_started

  micro-recipient:
    container_name: micro-recipient
    build: ./micro-recipient
    image: micro-recipient:latest
    ports:
      - 8082:8082
    networks:
      - recipient
    depends_on:
      eureka-server:
        condition: service_started
      rabbitmq:
        condition: service_started

  micro-collector:
    container_name: micro-collector
    build: ./micro-collector
    image: micro-collector:latest
    ports:
      - 8083:8083
    networks:
      - recipient
    depends_on:
      eureka-server:
        condition: service_started
      rabbitmq:
        condition: service_started

  micro-visualizer:
    container_name: micro-visualizer
    build: ./micro-visualizer
    image: micro-visualizer:latest
    ports:
      - 8084:8084
    networks:
      - recipient
    depends_on:
      eureka-server:
        condition: service_started
      rabbitmq:
        condition: service_started

  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: demo
    ports:
      - 5432:5432
    networks:
      - recipient
